{
  "hash": "86386bc8d5d1214bcbc666f05d3c4584",
  "result": {
    "markdown": "\n\n\n# Comparación De Modelos Con Remuestreo {#sec-compare}\n\nUna vez que creamos dos o más modelos, el siguiente paso es compararlos para entender cuál es mejor. En algunos casos, las comparaciones pueden ser *dentro del modelo*, donde el mismo modelo puede evaluarse con diferentes características o métodos de preprocesamiento. Alternativamente, las comparaciones *entre modelos*, como cuando comparamos modelos de regresión lineal y de random forest en el [Capítulo @sec-resampling], son el escenario más común.\n\nEn cualquier caso, el resultado es una colección de estadísticas resumidas remuestreadas (por ejemplo, RMSE, precisión, etc.) para cada modelo. En este capítulo, primero demostraremos cómo se pueden usar conjuntos de flujos de trabajo para ajustarse a múltiples modelos. Luego, discutiremos aspectos importantes de las estadísticas de remuestreo. Finalmente, veremos cómo comparar modelos formalmente (usando pruebas de hipótesis o un enfoque bayesiano).\n\n## Crear Múltiples Modelos Con Conjuntos De Flujo De Trabajo {#sec-workflow-set}\n\nEn @sec-workflow-sets-intro describimos la idea de un conjunto de flujo de trabajo donde se pueden generar combinatoriamente diferentes preprocesadores y/o modelos. En el [Capítulo @sec-resampling], utilizamos una receta para los datos de Ames que incluía un término de interacción así como funciones spline para longitud y latitud. Para demostrar más con los conjuntos de flujos de trabajo, creemos tres modelos lineales diferentes que agreguen estos pasos de preprocesamiento de forma incremental; Podemos probar si estos términos adicionales mejoran los resultados del modelo. Crearemos tres recetas y luego las combinaremos en un conjunto de flujo de trabajo:\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-workflow-set_fecbe91d06c28cae65ae37384cfc0d0c'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\ntidymodels_prefer()\n\nbasic_rec <- \n  recipe(Sale_Price ~ Neighborhood + Gr_Liv_Area + Year_Built + Bldg_Type + \n           Latitude + Longitude, data = ames_train) %>%\n  step_log(Gr_Liv_Area, base = 10) %>% \n  step_other(Neighborhood, threshold = 0.01) %>% \n  step_dummy(all_nominal_predictors())\n\ninteraction_rec <- \n  basic_rec %>% \n  step_interact( ~ Gr_Liv_Area:starts_with(\"Bldg_Type_\") ) \n\nspline_rec <- \n  interaction_rec %>% \n  step_ns(Latitude, Longitude, deg_free = 50)\n\npreproc <- \n  list(basic = basic_rec, \n       interact = interaction_rec, \n       splines = spline_rec\n  )\n\nlm_models <- workflow_set(preproc, list(lm = linear_reg()), cross = FALSE)\nlm_models\n## # A workflow set/tibble: 3 × 4\n##   wflow_id    info             option    result    \n##   <chr>       <list>           <list>    <list>    \n## 1 basic_lm    <tibble [1 × 4]> <opts[0]> <list [0]>\n## 2 interact_lm <tibble [1 × 4]> <opts[0]> <list [0]>\n## 3 splines_lm  <tibble [1 × 4]> <opts[0]> <list [0]>\n```\n:::\n\n\nNos gustaría volver a muestrear cada uno de estos modelos por turno. Para hacerlo, usaremos una función similar a <span class=\"pkg\">purrr</span> llamada `workflow_map()`. Esta función toma un argumento inicial de la función para aplicarlo a los flujos de trabajo, seguido de opciones para esa función. También configuramos un argumento `verbose` que imprimirá el progreso, así como un argumento `seed` que garantiza que cada modelo utilice el mismo flujo de números aleatorios que los demás.\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-workflow-set-resample_14b5c90df8001a6789e211048d3fd84a'}\n\n```{.r .cell-code}\nlm_models <- \n  lm_models %>% \n  workflow_map(\"fit_resamples\", \n               # Options to `workflow_map()`: \n               seed = 1101, verbose = TRUE,\n               # Options to `fit_resamples()`: \n               resamples = ames_folds, control = keep_pred)\n## i 1 of 3 resampling: basic_lm\n## ✔ 1 of 3 resampling: basic_lm (3.3s)\n## i 2 of 3 resampling: interact_lm\n## ✔ 2 of 3 resampling: interact_lm (3.3s)\n## i 3 of 3 resampling: splines_lm\n## ✔ 3 of 3 resampling: splines_lm (5.1s)\nlm_models\n## # A workflow set/tibble: 3 × 4\n##   wflow_id    info             option    result   \n##   <chr>       <list>           <list>    <list>   \n## 1 basic_lm    <tibble [1 × 4]> <opts[2]> <rsmp[+]>\n## 2 interact_lm <tibble [1 × 4]> <opts[2]> <rsmp[+]>\n## 3 splines_lm  <tibble [1 × 4]> <opts[2]> <rsmp[+]>\n```\n:::\n\n\nObserve que las columnas `option` y `result` ahora están completas. La primera incluye las opciones para `fit_resamples()` que se dieron (para reproducibilidad), y la última columna contiene los resultados producidos por `fit_resamples()`.\n\nHay algunas funciones convenientes para conjuntos de flujos de trabajo, incluida `collect_metrics()` para recopilar las estadísticas de rendimiento. Podemos `filtrar()` a cualquier métrica específica que nos interese:\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-workflow-set-collect_de804f90dbbea4cb7e928c5911a3e99c'}\n\n```{.r .cell-code}\ncollect_metrics(lm_models) %>% \n  filter(.metric == \"rmse\")\n## # A tibble: 3 × 9\n##   wflow_id    .config          preproc model .metric .estimator   mean     n std_err\n##   <chr>       <chr>            <chr>   <chr> <chr>   <chr>       <dbl> <int>   <dbl>\n## 1 basic_lm    Preprocessor1_M… recipe  line… rmse    standard   0.0803    10 0.00264\n## 2 interact_lm Preprocessor1_M… recipe  line… rmse    standard   0.0799    10 0.00272\n## 3 splines_lm  Preprocessor1_M… recipe  line… rmse    standard   0.0785    10 0.00282\n```\n:::\n\n\n¿Qué pasa con el modelo de bosque aleatorio del capítulo anterior? Podemos agregarlo al conjunto convirtiéndolo primero a su propio conjunto de flujo de trabajo y luego vinculando filas. Esto requiere que, cuando se volvió a muestrear el modelo, se haya configurado la opción `save_workflow = TRUE` en la función de control.\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-workflow-set-four-models_376139e366fb41093ffaf151090bf901'}\n\n```{.r .cell-code}\nfour_models <- \n  as_workflow_set(random_forest = rf_res) %>% \n  bind_rows(lm_models)\nfour_models\n## # A workflow set/tibble: 4 × 4\n##   wflow_id      info             option    result   \n##   <chr>         <list>           <list>    <list>   \n## 1 random_forest <tibble [1 × 4]> <opts[0]> <rsmp[+]>\n## 2 basic_lm      <tibble [1 × 4]> <opts[2]> <rsmp[+]>\n## 3 interact_lm   <tibble [1 × 4]> <opts[2]> <rsmp[+]>\n## 4 splines_lm    <tibble [1 × 4]> <opts[2]> <rsmp[+]>\n```\n:::\n\n\nEl método `autoplot()`, con salida en @fig-workflow-set-r-squared, muestra intervalos de confianza para cada modelo en orden de mejor a peor. En este capítulo, nos centraremos en el coeficiente de determinación (también conocido como $R^2$) y usaremos `metric = \"rsq\"` en la llamada para configurar nuestro gráfico:\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-workflow-set-rsq_dbfc425073b58cac2b9a7d49497e04f1'}\n\n```{.r .cell-code}\nlibrary(ggrepel)\nautoplot(four_models, metric = \"rsq\") +\n  geom_text_repel(aes(label = wflow_id), nudge_x = 1/8, nudge_y = 1/100) +\n  theme(legend.position = \"none\")\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/fig-workflow-set-r-squared_bc417e4bf54928ecc50fad71981612fb'}\n::: {.cell-output-display}\n![Intervalos de confianza para el coeficiente de determinación utilizando cuatro modelos diferentes](11-comparing-models_files/figure-html/fig-workflow-set-r-squared-1.png){#fig-workflow-set-r-squared fig-align='center' fig-alt='Intervalos de confianza para el coeficiente de determinación utilizando cuatro modelos diferentes. El modelo de bosque aleatorio tiene los mejores resultados y sus intervalos no se superponen con los intervalos de los otros modelos.' width=672}\n:::\n:::\n\n\nEn este gráfico de intervalos de confianza $R^2$, podemos ver que el método de random forest está funcionando mejor y hay mejoras menores en los modelos lineales a medida que agregamos más pasos a la receta.\n\nAhora que tenemos 10 estimaciones de rendimiento remuestreadas para cada uno de los cuatro modelos, estas estadísticas resumidas se pueden utilizar para realizar comparaciones entre modelos.\n\n## Comparación De Estadísticas De Rendimiento Remuestreadas {#sec-resampled-stats}\n\nTeniendo en cuenta los resultados anteriores para los tres modelos lineales, parece que los términos adicionales no mejoran profundamente las estadísticas medias de RMSE o $R^2$ para los modelos lineales. La diferencia es pequeña, pero podría ser mayor que el ruido experimental en el sistema, es decir, considerarse estadísticamente significativa. Podemos probar formalmente la hipótesis de que los términos adicionales aumentan $R^2$.\n\n::: rmdnote\nAntes de hacer comparaciones entre modelos, es importante para nosotros analizar la correlación dentro de la muestra para las estadísticas de remuestreo. Cada modelo se midió con los mismos pliegues de validación cruzada y los resultados para la misma nueva muestra tienden a ser similares.\n:::\n\nEn otras palabras, hay algunos remuestreos en los que el rendimiento de todos los modelos tiende a ser bajo y otros en los que tiende a ser alto. En estadística, esto se denomina componente de variación *remuestreo a remuestreo*.\n\nPara ilustrar, recopilemos las estadísticas de remuestreo individuales para los modelos lineales y el bosque aleatorio. Nos centraremos en la estadística $R^2$ para cada modelo, que mide la correlación entre los precios de venta observados y previstos para cada casa. Vamos a `filtrar()` para mantener solo las métricas $R^2$, remodelar los resultados y calcular cómo se correlacionan las métricas entre sí.\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-collect_b82c8c09c57226cda664c4fb9762f7f2'}\n\n```{.r .cell-code}\nrsq_indiv_estimates <- \n  collect_metrics(four_models, summarize = FALSE) %>% \n  filter(.metric == \"rsq\") \n\nrsq_wider <- \n  rsq_indiv_estimates %>% \n  select(wflow_id, .estimate, id) %>% \n  pivot_wider(id_cols = \"id\", names_from = \"wflow_id\", values_from = \".estimate\")\n\ncorrr::correlate(rsq_wider %>% select(-id), quiet = TRUE)\n## # A tibble: 4 × 5\n##   term          random_forest basic_lm interact_lm splines_lm\n##   <chr>                 <dbl>    <dbl>       <dbl>      <dbl>\n## 1 random_forest        NA        0.887       0.888      0.889\n## 2 basic_lm              0.887   NA           0.993      0.997\n## 3 interact_lm           0.888    0.993      NA          0.987\n## 4 splines_lm            0.889    0.997       0.987     NA\n```\n:::\n\n\nEstas correlaciones son altas e indican que, entre modelos, existen grandes correlaciones dentro de la muestra. Para ver esto visualmente en @fig-rsquared-resamples, las estadísticas $R^2$ se muestran para cada modelo con líneas que conectan los remuestreos:\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-rsq-plot_58f622e64da7c0fff175f06ce398bb41'}\n\n```{.r .cell-code}\nrsq_indiv_estimates %>% \n  mutate(wflow_id = reorder(wflow_id, .estimate)) %>% \n  ggplot(aes(x = wflow_id, y = .estimate, group = id, color = id)) + \n  geom_line(alpha = .5, linewidth = 1.25) + \n  theme(legend.position = \"none\")\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/fig-rsquared-resamples_b24127e9b488b5830e6a7bb12957c9d5'}\n::: {.cell-output-display}\n![Remuestrear estadísticas entre modelos](11-comparing-models_files/figure-html/fig-rsquared-resamples-1.png){#fig-rsquared-resamples fig-align='center' fig-alt='Un gráfico que conecta las estadísticas de remuestreo entre modelos. La gráfica conecta los resultados de cada modelo con la misma línea. Las métricas de rendimiento tienden a ser relativamente similares en todos los resultados del modelo.' width=672}\n:::\n:::\n\n\nSi el efecto de remuestreo a remuestreo no fuera real, no habría líneas paralelas. Una prueba estadística de las correlaciones evalúa si las magnitudes de estas correlaciones no son simplemente ruido. Para los modelos lineales:\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-resample-cor_9f4acc7a1d8de92ce8925496efd91858'}\n\n```{.r .cell-code}\nrsq_wider %>% \n  with( cor.test(basic_lm, splines_lm) ) %>% \n  tidy() %>% \n  select(estimate, starts_with(\"conf\"))\n## # A tibble: 1 × 3\n##   estimate conf.low conf.high\n##      <dbl>    <dbl>     <dbl>\n## 1    0.997    0.987     0.999\n```\n:::\n\n\nLos resultados de la prueba de correlación (la \"estimación\", `estimate`, de la correlación y los intervalos de confianza) nos muestran que la correlación dentro de la muestra parece ser real.\n\n¿Qué efecto tiene la correlación adicional en nuestro análisis? Considere la varianza de una diferencia de dos variables:\n\n$$\\operatorname{Var}[X - Y] = \\operatorname{Var}[X] + \\operatorname{Var}[Y]  - 2 \\operatorname{Cov}[X, Y]$$\n\nEl último término es la covarianza entre dos elementos. Si hay una covarianza positiva significativa, entonces cualquier prueba estadística de esta diferencia carecería de potencia crítica al comparar la diferencia en dos modelos. En otras palabras, ignorar el efecto de remuestreo a remuestreo sesgaría nuestras comparaciones de modelos hacia la ausencia de diferencias entre los modelos.\n\n::: rmdwarning\nEsta característica de las estadísticas de remuestreo entrará en juego en las dos secciones siguientes.\n:::\n\nAntes de realizar comparaciones de modelos o observar los resultados del remuestreo, puede resultar útil definir un *tamaño del efecto práctico* relevante. Dado que estos análisis se centran en las estadísticas de $R^2$, el tamaño del efecto práctico es el cambio en $R^2$ que consideraríamos una diferencia realista que importa. Por ejemplo, podríamos pensar que dos modelos no son prácticamente diferentes si sus valores de $R^2$ están dentro de $\\pm 2$%. Si este fuera el caso, las diferencias menores al 2% no se consideran importantes incluso si son estadísticamente significativas.\n\nLa importancia práctica es subjetiva; dos personas pueden tener ideas muy diferentes en el umbral de la importancia. Sin embargo, más adelante mostraremos que esta consideración puede resultar muy útil a la hora de decidir entre modelos.\n\n## Métodos Simples De Prueba De Hipótesis\n\nPodemos utilizar pruebas de hipótesis simples para hacer comparaciones formales entre modelos. Considere el conocido modelo estadístico lineal:\n\n$$y_{ij} = \\beta_0 + \\beta_1x_{i1} + \\ldots + \\beta_px_{ip} + \\epsilon_{ij}$$\n\nEste modelo versátil se utiliza para crear modelos de regresión, además de ser la base de la popular técnica de análisis de varianza (ANOVA) para comparar grupos. Con el modelo ANOVA, los predictores ($x_{ij}$) son variables binarias ficticias para diferentes grupos. A partir de esto, los parámetros $\\beta$ estiman si dos o más grupos son diferentes entre sí utilizando técnicas de prueba de hipótesis.\n\nEn nuestra situación específica, el ANOVA también puede realizar comparaciones de modelos. Supongamos que las estadísticas individuales $R^2$ remuestreadas sirven como *datos de resultado* (es decir, $y_{ij}$) y los modelos como *predictores* en el modelo ANOVA. Se muestra una muestra de esta estructura de datos en @tbl-model-anova-data.\n\n\n::: {#tbl-model-anova-data .cell layout-align=\"center\" tbl-cap='Modelar estadísticas de rendimiento como un conjunto de datos para análisis.' hash='11-comparing-models_cache/html/tbl-model-anova-data_52bb1f917305b5ea6bfdea4f072f737a'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Y = rsq </th>\n   <th style=\"text-align:left;\"> model </th>\n   <th style=\"text-align:right;\"> X1 </th>\n   <th style=\"text-align:right;\"> X2 </th>\n   <th style=\"text-align:right;\"> X3 </th>\n   <th style=\"text-align:left;\"> id </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 0.8108 </td>\n   <td style=\"text-align:left;\"> basic_lm </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:left;\"> Fold01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 0.8134 </td>\n   <td style=\"text-align:left;\"> interact_lm </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:left;\"> Fold01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 0.8615 </td>\n   <td style=\"text-align:left;\"> random_forest </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:left;\"> Fold01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 0.8217 </td>\n   <td style=\"text-align:left;\"> splines_lm </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> Fold01 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 0.8045 </td>\n   <td style=\"text-align:left;\"> basic_lm </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:left;\"> Fold02 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 0.8103 </td>\n   <td style=\"text-align:left;\"> interact_lm </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:left;\"> Fold02 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nLas columnas `X1`, `X2` y `X3` de la tabla son indicadores de los valores de la columna `modelo`. Su orden se definió de la misma manera que R los definiría, ordenados alfabéticamente por `modelo`.\n\nPara nuestra comparación de modelos, el modelo ANOVA específico es:\n\n$$y_{ij} = \\beta_0 + \\beta_1x_{i1} + \\beta_2x_{i2} + \\beta_3x_{i3} + \\epsilon_{ij}$$\n\ndonde\n\n-   $\\beta_0$ es la estimación del estadístico $R^2$ medio para los modelos lineales básicos (es decir, sin splines ni interacciones),\n\n-   $\\beta_1$ es el cambio en la media $R^2$ cuando se agregan interacciones al modelo lineal básico,\n\n-   $\\beta_2$ es el cambio en la media $R^2$ entre el modelo lineal básico y el modelo de random forest, y\n\n-   $\\beta_3$ es el cambio en la media $R^2$ entre el modelo lineal básico y uno con interacciones y splines.\n\nA partir de estos parámetros del modelo, se generan pruebas de hipótesis y valores p para comparar modelos estadísticamente, pero debemos lidiar con cómo manejar el efecto de remuestreo a remuestre. Históricamente, los grupos de remuestreo se consideraban un *efecto de bloque* y se agregaba un término apropiado al modelo. Alternativamente, el efecto de remuestreo podría considerarse un *efecto aleatorio* en el que estas remuestras particulares se extrajeron al azar de una población más grande de posibles remuestras. Sin embargo, no estamos realmente interesados en estos efectos; sólo queremos ajustarlos en el modelo para que las varianzas de las diferencias interesantes se estimen adecuadamente.\n\nTratar las remuestras como efectos aleatorios es teóricamente atractivo. Los métodos para ajustar un modelo ANOVA con este tipo de efecto aleatorio podrían incluir el modelo lineal mixto [@faraway2016extending] o un modelo jerárquico bayesiano (que se muestra en la siguiente sección).\n\nUn método simple y rápido para comparar dos modelos a la vez es usar las diferencias en los valores de $R^2$ como datos de resultado en el modelo ANOVA. Dado que los resultados coinciden mediante remuestreo, las diferencias no contienen el efecto de remuestreo a remuestre y, por esta razón, el modelo ANOVA estándar es apropiado. Para ilustrar, esta llamada a `lm()` prueba la diferencia entre dos de los modelos de regresión lineal:\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-t-test_69841dd57afd82e5c38f208bf9cbe0cf'}\n\n```{.r .cell-code}\ncompare_lm <- \n  rsq_wider %>% \n  mutate(difference = splines_lm - basic_lm)\n\nlm(difference ~ 1, data = compare_lm) %>% \n  tidy(conf.int = TRUE) %>% \n  select(estimate, p.value, starts_with(\"conf\"))\n## # A tibble: 1 × 4\n##   estimate   p.value conf.low conf.high\n##      <dbl>     <dbl>    <dbl>     <dbl>\n## 1  0.00913 0.0000256  0.00650    0.0118\n\n# Alternativamente, también se podría utilizar una prueba t pareada: \nrsq_wider %>% \n  with( t.test(splines_lm, basic_lm, paired = TRUE) ) %>%\n  tidy() %>% \n  select(estimate, p.value, starts_with(\"conf\"))\n## # A tibble: 1 × 4\n##   estimate   p.value conf.low conf.high\n##      <dbl>     <dbl>    <dbl>     <dbl>\n## 1  0.00913 0.0000256  0.00650    0.0118\n```\n:::\n\n\n\n\nPodríamos evaluar cada diferencia por pares de esta manera. Tenga en cuenta que el valor p indica una señal *estadísticamente significativa*; la colección de términos splines para longitud y latitud parece tener un efecto. Sin embargo, la diferencia en $R^2$ se estima en 0.91%. Si nuestro tamaño de efecto práctico fuera del 2%, es posible que no consideráramos que valga la pena incluir estos términos en el modelo.\n\n::: rmdnote\nYa hemos mencionado brevemente los valores p, pero ¿qué son realmente? De @pvalue: \"Informalmente, un valor p es la probabilidad, según un modelo estadístico específico, de que un resumen estadístico de los datos (por ejemplo, la diferencia de medias muestrales entre dos grupos comparados) sea igual o más extremo que su valor observado.\"\n\nEn otras palabras, si este análisis se repitiera una gran cantidad de veces bajo la hipótesis nula de que no hay diferencias, el valor p refleja cuán extremos serían nuestros resultados observados en comparación.\n:::\n\n## Métodos Bayesianos {#sec-tidyposterior}\n\nSimplemente utilizamos pruebas de hipótesis para comparar modelos formalmente, pero también podemos adoptar un enfoque más general para realizar estas comparaciones formales utilizando efectos aleatorios y estadísticas bayesianas [@mcelreath2020statistical]. Si bien el modelo es más complejo que el método ANOVA, la interpretación es más simple y directa que el método del valor p. El modelo ANOVA anterior tenía la forma:\n\n$$y_{ij} = \\beta_0 + \\beta_1x_{i1} + \\beta_2x_{i2} + \\beta_3x_{i3} + \\epsilon_{ij}$$\n\ndonde se supone que los residuales $\\epsilon_{ij}$ son independientes y siguen una distribución gaussiana con media cero y desviación estándar constante de $\\sigma$. A partir de este supuesto, la teoría estadística muestra que los parámetros de regresión estimados siguen una distribución gaussiana multivariada y, de ahí, se derivan los valores p y los intervalos de confianza.\n\nUn modelo lineal bayesiano hace suposiciones adicionales. Además de especificar una distribución para los residuos, requerimos especificaciones de *distribución previa* para los parámetros del modelo ( $\\beta_j$ y $\\sigma$ ). Estas son distribuciones de los parámetros que asume el modelo antes de ser expuesto a los datos observados. Por ejemplo, un conjunto simple de distribuciones previas para nuestro modelo podría ser:\n\n\n```{=tex}\n\\begin{align}\n\\epsilon_{ij} &\\sim N(0, \\sigma) \\notag \\\\\n\\beta_j &\\sim N(0, 10) \\notag \\\\\n\\sigma &\\sim \\text{exponential}(1) \\notag\n\\end{align}\n```\n\nEstos antecedentes establecen los rangos posibles/probables de los parámetros del modelo y no tienen parámetros desconocidos. Por ejemplo, el valor anterior de $\\sigma$ indica que los valores deben ser mayores que cero, están muy sesgados a la derecha y tienen valores que generalmente son menores que 3 o 4.\n\nTenga en cuenta que los parámetros de regresión tienen una distribución a priori bastante amplia, con una desviación estándar de 10. En muchos casos, es posible que no tengamos una opinión sólida sobre el a priori más allá de que sea simétrico y tenga forma de campana. La gran desviación estándar implica un previo bastante poco informativo; no es demasiado restrictivo en términos de los posibles valores que podrían adoptar los parámetros. Esto permite que los datos tengan más influencia durante la estimación de parámetros.\n\nDados los datos observados y las especificaciones de distribución previas, se pueden estimar los parámetros del modelo. Las distribuciones finales de los parámetros del modelo son combinaciones de las estimaciones previas y de probabilidad. Estas *distribuciones posteriores* de los parámetros son las distribuciones clave de interés. Son una descripción probabilística completa de los parámetros estimados del modelo.\n\n### Un modelo de intersección aleatoria {.unnumbered}\n\nPara adaptar nuestro modelo ANOVA bayesiano de modo que las remuestras se modelen adecuadamente, consideramos un *modelo de intersección aleatoria*. Aquí, asumimos que los remuestreos impactan el modelo solo al cambiar la intersección. Tenga en cuenta que esto impide que los remuestreos tengan un impacto diferencial en los parámetros de regresión $\\beta_j$; Se supone que estos tienen la misma relación entre remuestreos. Esta ecuación modelo es:\n\n$$y_{ij} = (\\beta_0 + b_{i}) + \\beta_1x_{i1} + \\beta_2x_{i2} + \\beta_3x_{i3} + \\epsilon_{ij}$$\n\nEste no es un modelo irrazonable para estadísticas remuestreadas que, cuando se trazan entre modelos como en @fig-rsquared-resamples, tienden a tener efectos bastante paralelos entre modelos (es decir, poco cruce de líneas).\n\nPara la configuración de este modelo, se hace un supuesto adicional para la distribución previa de efectos aleatorios. Una suposición razonable para esta distribución es otra distribución simétrica, como otra curva en forma de campana. Dado el tamaño de muestra efectivo de 10 en nuestro resumen de datos estadísticos, usemos una distribución previa que sea más amplia que una distribución normal estándar. Usaremos una distribución t con un solo grado de libertad (es decir, $b_i \\sim t(1)$), que tiene colas más pesadas que una distribución gaussiana análoga.\n\nEl paquete <span class=\"pkg\">tidyposterior</span> tiene funciones para ajustarse a dichos modelos bayesianos con el fin de comparar modelos remuestreados. La función principal se llama `perf_mod()` y está configurada para \"simplemente funcionar\" para diferentes tipos de objetos:\n\n-   Para conjuntos de flujos de trabajo, crea un modelo ANOVA donde los grupos corresponden a los flujos de trabajo. Nuestros modelos existentes no optimizaron ningún parámetro de ajuste (consulte los siguientes tres capítulos). Si uno de los flujos de trabajo del conjunto tenía datos sobre parámetros de ajuste, en el análisis bayesiano se utilizan los mejores parámetros de ajuste establecidos para cada flujo de trabajo. En otras palabras, a pesar de la presencia de parámetros de ajuste, `perf_mod()` se centra en hacer *comparaciones entre flujos de trabajo*.\n\n-   Para los objetos que contienen un único modelo que ha sido ajustado usando remuestreo, `perf_mod()` hace *comparaciones dentro del modelo*. En esta situación, las variables de agrupación probadas en el modelo ANOVA bayesiano son los submodelos definidos por los parámetros de ajuste.\n\n-   La función `perf_mod()` también puede tomar un marco de datos producido por <span class=\"pkg\">rsample</span> que tiene columnas de métricas de rendimiento asociadas con dos o más resultados de modelo/flujo de trabajo. Estos podrían haberse generado por medios no estándar.\n\nA partir de cualquiera de estos tipos de objetos, la función `perf_mod()` determina un modelo bayesiano apropiado y lo ajusta con las estadísticas de remuestreo. Para nuestro ejemplo, modelará los cuatro conjuntos de estadísticas $R^2$ asociadas con los flujos de trabajo.\n\nEl paquete <span class=\"pkg\">tidyposterior</span> utiliza el [software Stan](https://mc-stan.org/) para especificar y ajustar los modelos a través del paquete <span class=\"pkg\">rstanarm</span>. Las funciones dentro de ese paquete tienen prioridades predeterminadas (consulte `?priors` para obtener más detalles). El siguiente modelo utiliza los valores previos predeterminados para todos los parámetros excepto para las intersecciones aleatorias (que siguen una distribución *t*). El proceso de estimación utiliza números aleatorios para que la semilla se establezca dentro de la llamada a la función. El proceso de estimación es iterativo y se replica varias veces en colecciones llamadas *cadenas*. El parámetro `iter` le dice a la función cuánto tiempo ejecutar el proceso de estimación en cada cadena. Cuando se utilizan varias cadenas, sus resultados se combinan (supongamos que esto está validado mediante evaluaciones diagnósticas).\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-fit-stan_d85d8c3178d8e1cae243f70434f67dfc'}\n\n```{.r .cell-code}\nlibrary(tidyposterior)\nlibrary(rstanarm)\n\n# El paquete rstanarm genera grandes cantidades de producción; esos resultados\n# no se muestran aquí, pero vale la pena inspeccionarlos para detectar posibles problemas. El\n# opción `refresh = 0` se puede utilizar para eliminar el registro.. \nrsq_anova <-\n  perf_mod(\n    four_models,\n    metric = \"rsq\",\n    prior_intercept = rstanarm::student_t(df = 1),\n    chains = 4,\n    iter = 5000,\n    seed = 1102\n  )\n```\n:::\n\n\nEl objeto resultante tiene información sobre el proceso de remuestreo, así como el objeto Stan incrustado en él (en un elemento llamado \"stan\"). Lo que más nos interesa son las distribuciones posteriores de los parámetros de regresión. El paquete <span class=\"pkg\">tidyposterior</span> tiene un método `tidy()` que extrae estas distribuciones posteriores en un tibble:\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-group-posteriors-tidy_11a7ba44800e11a6c18902b8d92d645b'}\n\n```{.r .cell-code}\nmodel_post <- \n  rsq_anova %>% \n  # Tomaa una muestra aleatoria de la distribución posterior\n  # así que se configura la semilla nuevamente para que sea reproducible. \n  tidy(seed = 1103) \n\nglimpse(model_post)\n## Rows: 40,000\n## Columns: 2\n## $ model     <chr> \"random_forest\", \"basic_lm\", \"interact_lm\", \"splines_lm\", \"rando…\n## $ posterior <dbl> 0.8342, 0.7916, 0.7988, 0.8015, 0.8393, 0.7976, 0.7981, 0.8089, …\n```\n:::\n\n\nLas cuatro distribuciones posteriores se visualizan en @fig-four-posteriors.\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-group-posteriors-res_d567c973bcd8850199bc757be82b5096'}\n\n```{.r .cell-code}\nmodel_post %>% \n  mutate(model = forcats::fct_inorder(model)) %>%\n  ggplot(aes(x = posterior)) + \n  geom_histogram(bins = 50, color = \"white\", fill = \"blue\", alpha = 0.4) + \n  facet_wrap(~ model, ncol = 1)\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/fig-four-posteriors_fea19d9b3adbe6308f4bcd5a7fabdfe9'}\n::: {.cell-output-display}\n![Distribuciones posteriores del coeficiente de determinación utilizando cuatro modelos diferentes.](11-comparing-models_files/figure-html/fig-four-posteriors-1.png){#fig-four-posteriors fig-align='center' fig-alt='Distribuciones posteriores del coeficiente de determinación utilizando cuatro modelos diferentes. La distribución correspondiente al random forest es la más grande y tiene poca superposición con las posteriores del otro modelo.' width=672}\n:::\n:::\n\n\nEstos histogramas describen las distribuciones de probabilidad estimadas del valor medio $R^2$ para cada modelo. Existe cierta superposición, especialmente para los tres modelos lineales.\n\nTambién hay un método básico `autoplot()` para los resultados del modelo, que se muestra en @fig-credible-intervals, así como el objeto ordenado que muestra gráficos de densidad superpuestos.\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-autoplot-intervals_395f3069e6d4ec17c35231c4a5720e15'}\n\n```{.r .cell-code}\nautoplot(rsq_anova) +\n  geom_text_repel(aes(label = workflow), nudge_x = 1/8, nudge_y = 1/100) +\n  theme(legend.position = \"none\")\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/fig-credible-intervals_2e9f971be46ab2cfb8899b40d9eafddf'}\n::: {.cell-output-display}\n![Intervalos creíbles derivados de las distribuciones posteriores del modelo.](11-comparing-models_files/figure-html/fig-credible-intervals-1.png){#fig-credible-intervals fig-align='center' fig-alt='Intervalos creíbles derivados de las distribuciones posteriores del modelo. El random forest muestra los mejores resultados sin superposición con los otros intervalos creíbles.' width=672}\n:::\n:::\n\n\nUn aspecto maravilloso del uso del remuestreo con modelos bayesianos es que, una vez que tenemos los parámetros posteriores, es trivial obtener las distribuciones posteriores para las combinaciones de los parámetros. Por ejemplo, para comparar los dos modelos de regresión lineal, nos interesa la diferencia de medias. La parte posterior de esta diferencia se calcula tomando muestras de las partes posteriores individuales y tomando las diferencias. La función `contrast_models()` puede hacer esto. Para especificar las comparaciones a realizar, los parámetros `list_1` y `list_2` toman vectores de caracteres y calculan las diferencias entre los modelos en esas listas (parametrizados como `list_1 - list_2`).\n\nPodemos comparar dos de los modelos lineales y visualizar los resultados en @fig-posterior-difference.\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-lm-difference-posterior_9209947f3c455299fcb9dc8f822f5ce7'}\n\n```{.r .cell-code}\nrqs_diff <-\n  contrast_models(rsq_anova,\n                  list_1 = \"splines_lm\",\n                  list_2 = \"basic_lm\",\n                  seed = 1104)\n\nrqs_diff %>% \n  as_tibble() %>% \n  ggplot(aes(x = difference)) + \n  geom_vline(xintercept = 0, lty = 2) + \n  geom_histogram(bins = 50, color = \"white\", fill = \"red\", alpha = 0.4)\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/fig-posterior-difference_491deec8609625a036515ce7179ac3ee'}\n::: {.cell-output-display}\n![Distribución posterior de la diferencia en el coeficiente de determinación.](11-comparing-models_files/figure-html/fig-posterior-difference-1.png){#fig-posterior-difference fig-align='center' fig-alt='La distribución posterior de la diferencia en el coeficiente de determinación. La distribución casi no se superpone con cero.' width=672}\n:::\n:::\n\n\nLa parte posterior muestra que el centro de la distribución es mayor que cero (lo que indica que el modelo con splines normalmente tenía valores más grandes) pero se superpone con cero hasta cierto punto. El método `summary()` para este objeto calcula la media de la distribución así como los intervalos creíbles, el análogo bayesiano de los intervalos de confianza.\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-lm-summary_6ff56ea2993aa910efe76612e52d3471'}\n\n```{.r .cell-code}\nsummary(rqs_diff) %>% \n  select(-starts_with(\"pract\"))\n## # A tibble: 1 × 6\n##   contrast               probability    mean   lower  upper  size\n##   <chr>                        <dbl>   <dbl>   <dbl>  <dbl> <dbl>\n## 1 splines_lm vs basic_lm        1.00 0.00919 0.00510 0.0132     0\n```\n:::\n\n\nLa columna `probability` refleja la proporción del posterior que es mayor que cero. Ésta es la probabilidad de que la diferencia positiva sea real. El valor no es cercano a cero, lo que proporciona un fuerte argumento a favor de la significancia estadística, es decir, la idea de que estadísticamente la diferencia real no es cero.\n\nSin embargo, la estimación de la diferencia de medias es bastante cercana a cero. Recuerde que el tamaño del efecto práctico que sugerimos anteriormente es del 2%. Con una distribución posterior, también podemos calcular la probabilidad de que sea prácticamente significativo. En el análisis bayesiano, esta es una *estimación ROPE* (para Región de equivalencia práctica, @kruschke2018bayesian). Para estimar esto, se utiliza la opción `size` de la función de `summary`:\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-lm-pract_859b0a2a6497f5f600d912a49148d8f4'}\n\n```{.r .cell-code}\nsummary(rqs_diff, size = 0.02) %>% \n  select(contrast, starts_with(\"pract\"))\n## # A tibble: 1 × 4\n##   contrast               pract_neg pract_equiv pract_pos\n##   <chr>                      <dbl>       <dbl>     <dbl>\n## 1 splines_lm vs basic_lm         0        1.00    0.0001\n```\n:::\n\n\nLa columna `pract_equiv` es la proporción del posterior que está dentro de `[-size, size]` (las columnas `pract_neg` y `pract_pos` son las proporciones que están debajo y encima de este intervalo). Este gran valor indica que, para nuestro tamaño del efecto, existe una probabilidad abrumadora de que los dos modelos sean prácticamente iguales. Aunque el gráfico anterior mostró que nuestra diferencia probablemente sea distinta de cero, la prueba de equivalencia sugiere que es lo suficientemente pequeña como para no ser significativa en la práctica.\n\nSe podría utilizar el mismo proceso para comparar el modelo de random forest con una o ambas regresiones lineales que se volvieron a muestrear. De hecho, cuando se usa `perf_mod()` con un conjunto de flujo de trabajo, el método `autoplot()` puede mostrar los resultados de `pract_equiv` que comparan cada flujo de trabajo con el mejor actual (el modelo de bosque aleatorio, en este caso).\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-rope-plot_8a4df6de8a5daad85dd5bc775db63a69'}\n\n```{.r .cell-code}\nautoplot(rsq_anova, type = \"ROPE\", size = 0.02) +\n  geom_text_repel(aes(label = workflow)) +\n  theme(legend.position = \"none\")\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/fig-practical-equivalence_cec7420887cee76d801a6b778bfbe5f9'}\n::: {.cell-output-display}\n![Probabilidad de equivalencia práctica para un tamaño del efecto del 2%](11-comparing-models_files/figure-html/fig-practical-equivalence-1.png){#fig-practical-equivalence fig-align='center' fig-alt='Probabilidad de equivalencia práctica para un tamaño del efecto del 2%. Ningún otro modelo tiene un cambio distinto de cero al coincidir con los resultados del random forest.' width=672}\n:::\n:::\n\n\n@fig-practical-equivalence nos muestra que ninguno de los modelos lineales se acerca al modelo de random forest cuando se utiliza un tamaño de efecto práctico del 2%.\n\n### El efecto de la cantidad de remuestreo. {.unnumbered}\n\n¿Cómo afecta el número de remuestreos a estos tipos de comparaciones bayesianas formales? Más remuestreos aumentan la precisión de la estimación general del remuestreo; esa precisión se propaga a este tipo de análisis. A modo de ilustración, se agregaron nuevas muestras adicionales mediante validación cruzada repetida. ¿Cómo cambió la distribución posterior? @fig-intervals-over-replicates muestra los intervalos de credibilidad del 90% con hasta 100 remuestreos (generados a partir de 10 repeticiones de validación cruzada 10 veces).[^11-comparing-models-1]\n\n[^11-comparing-models-1]: El código para generar `intervalos` está disponible en <https://github.com/tidymodels/TMwR/blob/main/extras/ames_posterior_intervals.R>.\n\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/compare-cred-int_e7aa77afd7d0e4a0d550d56d61044514'}\n\n```{.r .cell-code}\nggplot(intervals,\n       aes(x = resamples, y = mean)) +\n  geom_path() +\n  geom_ribbon(aes(ymin = lower, ymax = upper), fill = \"red\", alpha = .1) +\n  labs(x = \"Número de remuestras (validación cruzada repetida 10 veces)\")\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='11-comparing-models_cache/html/fig-intervals-over-replicates_9aaf5c8731265e39b36cb01feeb04a81'}\n::: {.cell-output-display}\n![Probabilidad de equivalencia práctica con el modelo de bosque aleatorio.](11-comparing-models_files/figure-html/fig-intervals-over-replicates-1.png){#fig-intervals-over-replicates fig-align='center' fig-alt='La probabilidad de equivalencia práctica con el modelo de bosque aleatorio.' width=672}\n:::\n:::\n\n\nEl ancho de los intervalos disminuye a medida que se agregan más muestras. Claramente, pasar de diez remuestreos a treinta tiene un impacto mayor que pasar de ochenta a 100. Hay rendimientos decrecientes por utilizar un número \"grande\" de remuestreos (\"grande\" será diferente para diferentes conjuntos de datos).\n\n## Resumen Del Capítulo {#sec-compare-summary}\n\nEste capítulo describió métodos estadísticos formales para probar diferencias en el rendimiento entre modelos. Demostramos el efecto dentro de la nueva muestra, donde los resultados para la misma nueva muestra tienden a ser similares; este aspecto de las estadísticas resumidas remuestreadas requiere un análisis apropiado para realizar comparaciones de modelos válidas. Además, aunque la significación estadística y la significancia práctica son conceptos importantes para las comparaciones de modelos, son diferentes.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}